import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion 'Google Inc.:Google APIs:21'
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

//    // call regular ndk-build(.cmd) script from app directory
//    task ndkBuild(type: Exec) {
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            commandLine 'ndk-build.cmd', '-C', file('src/main').absolutePath
//        } else {
//            commandLine 'ndk-build', '-C', file('src/main').absolutePath
//        }
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
}

dependencies {
    compile files('libs/bc.jar')
    compile files('libs/bsf-2.3.0.jar')
    compile files('libs/bsh-2.0b4.jar')
    compile files('libs/chardet.jar')
    compile files('libs/concurrent.jar')
    compile files('libs/htmlparser.jar')
    compile files('libs/java_websocket.jar')
    compile files('libs/jcifs-1.3.14.jar')
    compile files('libs/jnetutils.jar')
}
